랜덤을 구하는 방법?

int value = rand();
rand()함수를 사용해서 랜덤 값을 추출 할 수 있다..

rand()를 출력해보면 random 값이 나오질 않는다. 
컴퓨터 자체는 랜덤값이 라는게 존재 할 수 없다. 
컴퓨터 설계시 애매하게 랜덤으로 전자회로를 만들면 안되는 것이기에
난수 생성기와 같다.
어떤 숫자를 기반으로 그 다음 숫자를 연산하는 과정

첫번째 값을 구하는게 중요하다. 

srand()로 seed값을 설정해야한다.
seed값을 항상일정하게 하면 같은 값이 생성 될 수 있기에 time(0) 현재시간과 관련된 것을 만들어서ㄴ
seed값 설정

rand를 하기전에 srand(값) 같이 들어가야한다. 

	srand(time(0)); //시드 설정

	cout << rand() << endl;
	cout << rand() << endl;
	

	rand 자체는 운영체제 마다 다른데 일반적으로 0 ~ 32767 정도 범위의 값을 출력한다.

	원하는 숫자만 추출한다면 

	rand() % 3 나눗셈에 나머지만 추출하는 방법을 사용한다. 
	int value = rand() % 3 // 0~ 32767

	0 1 2 의 값이 1/3 확률로 나오는데 
	1 2 3이 나와야 하기에 
	1 을 더해준 형태로 하면된다.

	int value = 1 + (rand() % 3); 


	-=-----------------
	
	각각 1 2 3 코드를 계속 1 2 3 을 사용하면 숫자 자체를 코드 안에 떄려박는 것은
	좋지 않고 상수화 해서 변수로 사용하는게 좋다. 


	#include <iostream>
	using namespace std;

	int main()
	{
		srand(time(0));  // 시드 설정

		//1 2 3 

		int value = 1 + (rand() % 3);

		const int SCISSORS = 1;
		const int ROCK = 2;
		const int PAPER = 3;

		while(true)
		{
			cout << "가위(1) 바위(2) 보(3) 골라주세요!" << endl;
			cout << " > ";

			//컴퓨터
			int computerValue = 1 + (rand() % 3);

			//사용자
			int input;
			cin >> input;

			//각 케이스 마다 분기처리

			if(input == SCISSORS)
			{
				switch (computerValue)
				{
				case SCISSORS:
					cout << "가위(님) vs 가위(컴퓨터) 비겼습니다" << enld;
					break;
				case ROCK:
					cout << "가위(님) vs 바위(컴퓨터) 졌습니다." << endl;
					break;
				case
					cout << "가위(님) vs 보(컴퓨터) 이겼습니다." <<endl;
					break;
				}

			}
			else if (input == ROCK)
			{
				switch (computerValue)
				{
				case SCISSORS:
					cout << "바위(님) vs 가위(컴퓨터) 이겼습니다" << enld;
					break;
				case ROCK:
					cout << "바위(님) vs 바위(컴퓨터) 비겼습니다." << endl;
					break;
				case PAPER:
					cout << "바위(님) vs 보(컴퓨터) 졌습니다." <<endl;
					break;
				}
			}
			else if (input == PAPER)
			{
				switch (computerValue)
				{
				case SCISSORS:
					cout << "보(님) vs 가위(컴퓨터) 졌습니다" << enld;
					break;
				case ROCK:
					cout << "보(님) vs 바위(컴퓨터) 이겼습니다." << endl;
					break;
				case PAPER:
					cout << "보(님) vs 보(컴퓨터) 비겼습니다." <<endl;
					break;
				}
			}
			else
			{
				break;
			}
		}
	}



	+================
	확률이 뜨는 프로그램


	#include <iostream>
	using namespace std;

	int main()
	{
		srand(time(0));  // 시드 설정

		//1 2 3 

		int value = 1 + (rand() % 3);

		const int SCISSORS = 1;
		const int ROCK = 2;
		const int PAPER = 3;

		int wins = 0; //승률 계산 카운트
		int total = 0;  // 총 게임 수 (비긴거는 제외)


		while(true)
		{

			cout << "가위(1) 바위(2) 보(3) 골라주세요!" << endl;
			cout << " > ";

			if (total == 0)
			{
				cout << "현재 승률 : 없음" << endl;
			}
			else
			{
				//TODO: 승률 구해준다.
				//int winPercentage = wins / total * 100; //승률? (연산 순서를 바꾸자)
				int winPercentage = (wins * 100) / total;
				cout << "현재 승률 : " << winPercentage << endl;
			}



			//컴퓨터
			int computerValue = 1 + (rand() % 3);

			//사용자
			int input;
			cin >> input;

			//각 케이스 마다 분기처리

			if(input == SCISSORS)
			{
				switch (computerValue)
				{
				case SCISSORS:
					cout << "가위(님) vs 가위(컴퓨터) 비겼습니다" << enld;
					break;
				case ROCK:
					cout << "가위(님) vs 바위(컴퓨터) 졌습니다." << endl;
					total++;
					break;
				case
					cout << "가위(님) vs 보(컴퓨터) 이겼습니다." <<endl;
					wins++;
					total++;
					break;
				}

			}
			else if (input == ROCK)
			{
				switch (computerValue)
				{
				case SCISSORS:
					cout << "바위(님) vs 가위(컴퓨터) 이겼습니다" << enld;
					wins++;
					total++;
					break;
				case ROCK:
					cout << "바위(님) vs 바위(컴퓨터) 비겼습니다." << endl;
					break;
				case PAPER:
					cout << "바위(님) vs 보(컴퓨터) 졌습니다." <<endl;
					total++;
					break;
				}
			}
			else if (input == PAPER)
			{
				switch (computerValue)
				{
				case SCISSORS:
					cout << "보(님) vs 가위(컴퓨터) 졌습니다" << enld;
					total++;
					break;
				case ROCK:
					cout << "보(님) vs 바위(컴퓨터) 이겼습니다." << endl;
					wins++;
					total++;
					break;
				case PAPER:
					cout << "보(님) vs 보(컴퓨터) 비겼습니다." <<endl;
					break;
				}
			}
			else
			{
				break;
			}
		}
	}



	//* 오류가 뜨거나 뭔가 잘못 계산되고 있다면 브레이크 포인트를 잡고 찾는게 가장 좋다.
	% 가 안뜨고 있으니 특정 추정 부분을 브레이크 부분을 잡고 해본다. 

	정수 / 정수 = 정수 0.25이런 값이 나올 수 없기에 0이 출력된다. 